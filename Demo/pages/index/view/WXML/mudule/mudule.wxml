<!--pages/index/view/WXML/mudule/mudule.wxml-->

<!--总容器-->
<view class="contrainer">
    <!--标题-->
    <view class = "title">模板   <text class = "jump" bindtap = "jump">点我看看模板效果</text></view>
    <!--介绍-->
    <view class = "form-introduction">WXML提供模板（template），可以在模板中定义代码片段，然后在不同的地方调用。</view>

    <!--小标题-->
    <view class = "child-title">定义模板</view>
    <!--介绍-->
    <view class = "form-introduction">使用name属性，作为模板的名字。然后在{{tranferTexts[0]}}内定义代码片段，如：</view>
    <!--代码块-->
    <view class = "code-block-js">
        <text>{{codes[0]}}</text>
    </view>


    <!--小标题-->
    <view class = "child-title">使用模板</view>
    <!--介绍-->
    <view class = "form-introduction">使用 is 属性，声明需要的使用的模板，然后将模板所需要的 data 传入，如：</view>
    <!--代码块-->
    <view class = "code-block-js">
        <text>{{codes[1]}}</text>
    </view>
    <view class = "code-block-js">
        <text>{{codes[2]}}</text>
    </view>
    <!--介绍-->
    <view class = "form-introduction">is 属性可以使用 Mustache 语法，来动态决定具体需要渲染哪个模板：</view>
    <!--代码块-->
    <view class = "code-block-js">
        <text>{{codes[3]}}</text>
    </view>


    <!--小标题-->
    <view class = "child-title">模板的作用域</view>
    <!--介绍-->
    <view class = "form-introduction">模板拥有自己的作用域，只能使用data传入的数据。</view>
    
</view>